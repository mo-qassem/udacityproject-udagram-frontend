AWSTemplateFormatVersion: 2010-09-09
Description: UdacityProject-Udagram-Network

Parameters:
  EnvName:
    Type: String
    Default: "Udagram"
  VpcCidr:
    Type: String
    Default: "10.20.0.0/16"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-VPC
  VpcInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-IG
  VpcInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref VpcInternetGateway
      VpcId: !Ref VPC
  PrivateSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Cidr [!Ref VpcCidr, 10, 8]]
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-App-SN1
  PrivateSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Cidr [!Ref VpcCidr, 10, 8]]
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-App-SN2
  PublicSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [3, !Cidr [!Ref VpcCidr, 10, 8]]
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-WEB-SN1
  PublicSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [4, !Cidr [!Ref VpcCidr, 10, 8]]
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-WEB-SN2
  EipForNatGatewayOne:
    Type: AWS::EC2::EIP
    DependsOn: VpcInternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-EIP1
  EipForNatGatewayTwo:
    Type: AWS::EC2::EIP
    DependsOn: VpcInternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-EIP2
  NatGatewayOne:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref PublicSubnetOne
      AllocationId: !GetAtt EipForNatGatewayOne.AllocationId
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-NG1
  NatGatewayTwo:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref PublicSubnetTwo
      AllocationId: !GetAtt EipForNatGatewayTwo.AllocationId
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-NG2
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-Public-WEB-RT
  DefaultRouteForPublicRouteTable:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref VpcInternetGateway
      DestinationCidrBlock: "0.0.0.0/0"
  PublicRouteTableAssociationWithPublicSubnetOne:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetOne
  PublicRouteTableAssociationWithPublicSubnetTwo:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetTwo
  PrivateRouteTableOne:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-Private-APP-RT1
  DefaultRouteForPrivateRouteTableOne:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableOne
      NatGatewayId: !Ref NatGatewayOne
      DestinationCidrBlock: "0.0.0.0/0"
  PrivateRouteTableOneAssociationWithPrivateSubnetOne:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableOne
      SubnetId: !Ref PrivateSubnetOne
  PrivateRouteTableTwo:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-Private-APP-RT2
  DefaultRouteForPrivateRouteTableTwo:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableTwo
      NatGatewayId: !Ref NatGatewayTwo
      DestinationCidrBlock: "0.0.0.0/0"
  PrivateRouteTableTwoAssociationWithPrivateSubnetTwo:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableTwo
      SubnetId: !Ref PrivateSubnetTwo
  S3GatewayEndpoint:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      RouteTableIds:
        - !Ref PrivateRouteTableOne
        - !Ref PrivateRouteTableTwo
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcId: !Ref VPC

Outputs:
  VpcId:
    Description: The VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvName}-VPCID
  PrivateSubnetsIds:
    Description: List Of Private Subnets
    Value: !Join [", ", [!Ref PrivateSubnetOne, !Ref PrivateSubnetTwo]]
    Export:
      Name: PrivateSubnetsIds
  PublicSubnetOneId:
    Description: List Of Public Subnets
    Value: !Ref PublicSubnetOne
    Export:
      Name: PublicSubnetOneId
  PublicSubnetTwoId:
    Description: List Of Public Subnets
    Value: !Ref PublicSubnetTwo
    Export:
      Name: PublicSubnetTwoId
  IPAddrForNateGatewayOne:
    Value: !Ref EipForNatGatewayOne
  IPAddrForNateGatewayTwo:
    Value: !Ref EipForNatGatewayTwo
